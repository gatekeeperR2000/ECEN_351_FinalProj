<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><!-- #BeginTemplate "/Templates/glade.dwt" --><!-- DW6 -->
  <head>
    <!-- #BeginEditable "doctitle" --> 
    <title>Glade Reference Manual</title>
    <link href="CSS Docs/shadowHeading1.css" rel="stylesheet" type="text/css">
    <!-- #EndEditable -->
    <meta http-equiv="Content-Type"
    content="text/html; charset=iso-8859-1">
    <style type="text/css">
    body,td,th {
      font-family: Arial, Helvetica, sans-serif;
    }
    </style>
  </head>

  <body bgcolor="#FFFFFF">
  <div align="left">
    <img src="images/canvasview" width="32" height="32" align="right"><br>
  </div>

  <div align="left">
    <p align="left"><font face="Arial, Helvetica, sans-serif"><b>
      <font size="4">
        Glade Reference
      </font></b>
    </font></p>
    <hr>

    <!-- #BeginEditable "text" --> 
    <h2><font face="Arial, Helvetica, sans-serif">
      Vector class
    </font></h2>

    <p>
      A Vector class represents a direction.
    </p>

    <p>&nbsp;</p>

    <h4 class="shadowHeading1"><font face="Arial, Helvetica, sans-serif">
      Vector::Vector
    </font></h4>

    <p>
      Creates a Vector object v. The Vector is initialised to (0.0, 0.0) by default.
    </p>

    <h4 class="shadowHeading1"><font face="Arial, Helvetica, sans-serif">
      Vector::Vector(double x, double y)
    </font></h4>

    <p>
      Creates a Vector v, initialised with the values x and y.
    </p>

    <h4 class="shadowHeading1"><font face="Arial, Helvetica, sans-serif">
      Vector::Vector(int x1, int x2, int y1, int y2)
    </font></h4>

    <p>
      Creates a Vector v, initialised with the difference between x1 and x2, and the difference between y1 and y2.
    </p>

    <p>&nbsp;</p>

    <h4 class="shadowHeading1"><font face="Arial, Helvetica, sans-serif">
      Vector::setX(int x)
    </font></h4>

    <p>
      Set the Vector X value.
    </p>

    <p>&nbsp;</p>

    <h4 class="shadowHeading1"><font face="Arial, Helvetica, sans-serif">
      Vector::setY(int y)
    </font></h4>

    <p>
      Set the Vector Y value.
    </p>

    <p>&nbsp;</p>

    <h4 class="shadowHeading1"><font face="Arial, Helvetica, sans-serif">
      double  Vector::x
    </font></h4>

    <p>
      Get the X component of the Vector v.
    </p>

    <p>&nbsp;</p>

    <h4 class="shadowHeading1"><font face="Arial, Helvetica, sans-serif">
      double Vector::y
    </font></h4>

    <p>
      Get the Y component of the Vector v.
    </p>

    <p>&nbsp;</p>

    <h4 class="shadowHeading1"><font face="Arial, Helvetica, sans-serif">
      Vector::operator +
    </font></h4>

    <p>
      Adds the two Vectors.
    </p>

    <p>&nbsp;</p>

    <h4 class="shadowHeading1"><font face="Arial, Helvetica, sans-serif">
      Vector::operator -
    </font></h4>

    <p>
      Subtracts the two Vectors.
    </p>

    <p>&nbsp;</p>

    <h4 class="shadowHeading1"><font face="Arial, Helvetica, sans-serif">
      Vector::operator *
    </font></h4>

    <p>
      Returns a Vector multiplied by  a scalar.
    </p>

    <p>&nbsp;</p>

    <h4 class="shadowHeading1"><font face="Arial, Helvetica, sans-serif">
      Vector::operator /
    </font></h4>

    <p>
      Returns a Vector divided by a scalar.
    </p>

    <h4 class="shadowHeading1"><font face="Arial, Helvetica, sans-serif">
      Vector::dotProduct(const Vector &other) const
    </font></h4>

    <p>
      Returns the dot product of the vector with the other vector.
    </p>

    <h4 class="shadowHeading1"><font face="Arial, Helvetica, sans-serif">
      Vector::crossProduct(const Vector &other) const
    </font></h4>

    <p>
      Returns the cross product of the vector with the other vector.
    </p>

    <h4 class="shadowHeading1"><font face="Arial, Helvetica, sans-serif">
      Vector::length() const
    </font></h4>

    <p>
      Returns the length of the vector.
    </p>

    <h4 class="shadowHeading1"><font face="Arial, Helvetica, sans-serif">
      Vector::unit() const
    </font></h4>

    <p>
      Returns the unit vector, i.e. its components divided by the vector length.
    </p>

    <h4 class="shadowHeading1"><font face="Arial, Helvetica, sans-serif">
      Vector::normal() const
    </font></h4>

    <p>
      Returns the normal vector, i.e. a vector perpendicular to this vector.
    </p>

    
    <h4 class="shadowHeading1"><font face="Arial, Helvetica, sans-serif">
      dot(u, v)
    </font></h4>

    <p>
      A macro returning the dot product of the two vectors u and v.
      Being a macro u and v can be any numeric type.
    </p>

    <h4 class="shadowHeading1"><font face="Arial, Helvetica, sans-serif">
      cross(u, v)
    </font></h4>

    <p>
      A macro returning the cross product of the two vectors u and v.
      Being a macro u and v can be any numeric type.
    </p>

    <h4 class="shadowHeading1"><font face="Arial, Helvetica, sans-serif">
      norm(u)
    </font></h4>

    <p>
      A macro returning the length of the vector u.
      Being a macro u can be any numeric type.
    </p>

    <h4 class="shadowHeading1"><font face="Arial, Helvetica, sans-serif">
      dist(u, v)
    </font></h4>

    <p>
      A macro returning the norm of the difference of the vectors u and v.
      Being a macro u and v can be any numeric type.
    </p>

    <p>&nbsp;</p>
    <p>&nbsp;</p>
    
    <!-- #EndEditable --> 
    <p><a href="contents.htm"><font face="Arial, Helvetica, sans-serif">Contents</font></a><font face="Arial, Helvetica, sans-serif">|<a href="subject_index.htm">Index</a></font></p>
    <p><font face="Arial, Helvetica, sans-serif" size="-2">Copyright &copy; Peardrop Design 2024.</font></p>
  </div>
  </body>
<!-- #EndTemplate --></html>
