<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><!-- #BeginTemplate "/Templates/glade.dwt" --><!-- DW6 -->
  <head>
    <!-- #BeginEditable "doctitle" -->
    <title>Glade Reference Manual</title>
    <link href="CSS Docs/shadowHeading1.css" rel="stylesheet" type="text/css">
    <!-- #EndEditable -->
    <meta http-equiv="Content-Type"
    content="text/html; charset=iso-8859-1">
    <style type="text/css">
    body,td,th {
      font-family: Arial, Helvetica, sans-serif;
    }
    </style>
  </head>

  <body bgcolor="#FFFFFF">
    <div align="left">
      <img src="images/canvasview" width="32" height="32" align="right"><br>
    </div>
    <div align="left">
      <p align="left"><font face="Arial, Helvetica, sans-serif">
        <b><font size="4">
          Glade Reference
        </font></b>
      </font></p>
      <hr>

      <!-- #BeginEditable "text" -->
      <h2><font face="Arial, Helvetica, sans-serif">
        arc class
      </font></h2>

      <p>An <a href="#_arc_class">arc</a> is a portion of an <a href="#_ellipse_class">
        ellipse</a> and is derived from an <a href="#_ellipse_class">ellipse</a>. 
        It is normally  created by the cellView::dbCreateArc() function.
      </p>
      
      <p>&nbsp;</p>

      <h4 class="shadowHeading1"><font face="Arial, Helvetica, sans-serif">
        arc::setStartAngle(double  angle)
      </font></h4>

      <p>
        Sets the <a href="#_arc_class">arc</a> start <em>angle</em> in degrees. 
        Zero degrees is at the  3 o&rsquo;clock position with respect to the 
        centre of the arc. A positive angle is anticlockwise from zero.
      </p>

      <p>&nbsp;</p>

      <h4 class="shadowHeading1"><font face="Arial, Helvetica, sans-serif">
        double arc::startAngle()
      </font></h4>

      <p>
        Gets the <a href="#_arc_class">arc</a> start angle.
      </p>

      <p>&nbsp;</p>

      <h4 class="shadowHeading1"><font face="Arial, Helvetica, sans-serif">
        arc::setSpanAngle(double  angle)
      </font></h4>

      <p>
        Sets the <a href="#_arc_class">arc</a> span <em>angle</em> in degrees. 
        The span is the angle  from the start to end point of the arc. 
        A positive angle is anticlockwise from the start.
      </p>

      <p>&nbsp;</p>

      <h4 class="shadowHeading1"><font face="Arial, Helvetica, sans-serif">
        double   arc::spanAngle()
      </font></h4>

      <p>
        Gets the <a href="#_arc_class">arc</a> span angle.
      </p>

      <p>&nbsp;</p>

      <h4 class="shadowHeading1"><font face="Arial, Helvetica, sans-serif">
        dbtype_t   arc::objType()
      </font></h4>

      <p>
        Gets the <a href="#_arc_class">arc</a> object type, ARC.
      </p>

      <p>&nbsp;</p>

      <h4 class="shadowHeading1"><font face="Arial, Helvetica, sans-serif">
        const char *  arc::objName()
      </font></h4>

      <p>
        Gets the <a href="#_arc_class">arc</a> object name as &ldquo;ARC&rdquo;.
      </p>

      <h4 class="shadowHeading1"><font face="Arial, Helvetica, sans-serif">
        bool   arc::offGrid(int grid)
      </font></h4>

      <p>
        Returns true if the radius of the <a href="#_arc_class">arc</a> is offgrid.
      </p>

      <p>&nbsp;</p>

      <h4 class="shadowHeading1"><font face="Arial, Helvetica, sans-serif">
        arc::transform(<a href="#_transform_class">transform</a> &amp;trans)
      </font></h4>

      <p>
        Transforms this <a href="#_arc_class">arc</a> by <em>trans</em>.
      </p>

      <p>&nbsp;</p>

      <h4 class="shadowHeading1"><font face="Arial, Helvetica, sans-serif">
        <a href="Rect.htm">Rect</a> arc::bBox()
      </font></h4>

      <p>
        Returns the true bounding box of the arc.
      </p>

      <p>&nbsp;</p>

      <h4 class="shadowHeading1"><font face="Arial, Helvetica, sans-serif">
        arc::Move(<a href="#_cellView_class">cellView</a> *dest, <a href="#_Point_class">Point</a> delta, bool opt=true)
      </font></h4>

      <p>
        Move the <a href="#_arc_class">arc</a> origin by <em>delta </em>in the cellView 
        given by <em>dest</em>.&nbsp;If <em>opt</em> is true then the database is 
        re-optimised for the new array  position. If there are a lot of objects to move 
        it makes sense to turn this off  and instead use the cellView update() function 
        after moving them all.
      </p>

      <p>&nbsp;</p>

      <h4 class="shadowHeading1"><font face="Arial, Helvetica, sans-serif">
        <a href="#_dbObj_class">dbObj</a> * arc::Copy(<a href="#_cellView_class">cellView</a> *dest, <a href="#_Point_class">Point</a> delta, int layer=-1)
      </font></h4>

      <p>
        Copy the <a href="#_arc_class">arc</a>. <em>dest</em> is the destination cellView, 
        <em>delta</em> is the offset from the current origin. If <em>layer</em> is non-negative,
         the arc is copied  to the layer number.
      </p>

      <p>&nbsp;</p>

      <h4 class="shadowHeading1"><font face="Arial, Helvetica, sans-serif">
        <a href="#_dbObjList_class">dbObjList</a>&lt;<a href="#_dbObj_class">dbObj</a>&gt; * arc::Flatten(<a href="#_cellView_class">cellView</a> *dest, <a href="#_transform_class">transform</a> &amp;trans, bool hier=True)
      </font></h4>

      <p>
        Flatten the <a href="#_arc_class">arc</a> into the cellView <em>dest</em>, 
        with the given transform <em>trans</em>, and return a list of the flattened 
        objects.
      </p>

      <p>&nbsp;</p>
      <p>&nbsp;</p>

      <!-- #EndEditable --> 
      <p><a href="contents.htm"><font face="Arial, Helvetica, sans-serif">Contents</font></a><font face="Arial, Helvetica, sans-serif">|<a href="subject_index.htm">Index</a></font></p>
      <p><font face="Arial, Helvetica, sans-serif" size="-2">Copyright &copy; Peardrop Design 2024.</font></p>
    </div>
  </body>
  <!-- #EndTemplate -->
</html>
