<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><!-- #BeginTemplate "/Templates/glade.dwt" --><!-- DW6 -->
  <head>
    <!-- #BeginEditable "doctitle" -->
    <title>Glade Reference Manual</title>
    <link href="CSS Docs/shadowHeading1.css" rel="stylesheet" type="text/css">
    <!-- #EndEditable -->
    <meta http-equiv="Content-Type"
    content="text/html; charset=iso-8859-1">
    <style type="text/css">
    body,td,th {
      font-family: Arial, Helvetica, sans-serif;
    }
    </style>
  </head>

  <body bgcolor="#FFFFFF">
    <div align="left"><img src="images/canvasview" width="32" height="32" align="right"><br>
    </div>
    <div align="left">
      <p align="left"><font face="Arial, Helvetica, sans-serif"><b>
        <font size="4">
          Glade Reference
        </font></b>
      </font></p>
      <hr>
      
      <!-- #BeginEditable "text" -->
      <h2><font face="Arial, Helvetica, sans-serif">group</font></h2>

      <p>
        A group is an object derived from a dbObj that groups together other dbObj (including other groups). 
        This allows groups of objects to be manipulated together, e.g. move, copy, rotate operations can be 
        carried out as if the group is an instance.
      </p>

      <p>
        Groups can be transparent; a transparent group can have its individual members edited, whereas a 
        non-transparent group can only have its shape manipulated (which is a rectangle on the group 
        layer, with size equal to the bounding box of all the members).
      </p>

      <p>&nbsp;</p>

      <h2>Creating groups</h2>

      <p>
        Groups are normally created using the <a href="cellview.htm">cellView</a> dbCreategroup() function. 
      </p>

      <p>&nbsp;</p>

      <h4 class="shadowHeading1"><font face="Arial, Helvetica, sans-serif">
        db_Type group::objType()
      </font></h4>

      <p>
        Get the type of the object as group.
      </p>

      <p>&nbsp;</p>

      <h4 class="shadowHeading1"><font face="Arial, Helvetica, sans-serif">
        const char * group::objName()
      </font></h4>

      <p>
        Get the print name of the object, as &quot;group&quot;.
      </p>

      <p>&nbsp;</p>

      <h4 class="shadowHeading1"><font face="Arial, Helvetica, sans-serif">
        group::setName(const char *name)
      </font></h4>

      <p>
        Sets the <em>name</em> of the group
      </p>

      <p>&nbsp;</p>

      <h4 class="shadowHeading1"><font face="Arial, Helvetica, sans-serif">
        const char * s = grp.name()
      </font></h4>

      <p>
        Gets the group's name.
      </p>

      <p>&nbsp;</p>

      <h4 class="shadowHeading1"><font face="Arial, Helvetica, sans-serif">
        const <a href="Rect.htm">Rect</a> group::bBox()
      </font></h4>

      <p>
        Gets the group's bounding box.
      </p>

      <p>&nbsp;</p>

      <h4 class="shadowHeading1"><font face="Arial, Helvetica, sans-serif">
        int32_t group::left()
      </font></h4>

      <p>
        Gets the left edge / minimum X coord of the group bBox
      </p>

      <p>&nbsp;</p>

      <h4 class="shadowHeading1"><font face="Arial, Helvetica, sans-serif">
        int32_t group::bottom()
      </font></h4>

      <p>
        Gets the bottom edge / minimum Y coord of the group bBox
      </p>

      <p>&nbsp;</p>

      <h4 class="shadowHeading1"><font face="Arial, Helvetica, sans-serif">
        int32_t group::right()
      </font></h4>

      <p>
        Gets the right edge / maximum X coord of the group bBox
      </p>

      <p>&nbsp;</p>

      <h4 class="shadowHeading1"><font face="Arial, Helvetica, sans-serif">
        int32_t group::top()
      </font></h4>

      <p>
        Gets the top edge / maximum Y coord of the group bBox
      </p>

      <p>&nbsp;</p>

      <h4 class="shadowHeading1"><font face="Arial, Helvetica, sans-serif">
        group::orient(orient_t o)
      </font></h4>

      <p>
        Sets the orientation of the group.
      </p>

      <p>&nbsp;</p>

      <h4 class="shadowHeading1"><font face="Arial, Helvetica, sans-serif">
        orient_t group::orient()
      </font></h4>

      <p>
        Gets the orientation of the group.
      </p>

      <p>&nbsp;</p>

      <h4 class="shadowHeading1"><font face="Arial, Helvetica, sans-serif">
        group::origin(const <a href="Point.htm">Point</a> &amp;p)
      </font></h4>

      <p>
        Sets the origin (lower left coordinate) of the group.
      </p>

      <p>&nbsp;</p>

      <h4 class="shadowHeading1"><font face="Arial, Helvetica, sans-serif">
        <a href="Point.htm">Point</a> &amp; group::origin()
      </font></h4>

      <p>
        Gets the origin of the group.
      </p>

      <p>&nbsp;</p>

      <h4 class="shadowHeading1"><font face="Arial, Helvetica, sans-serif">
        group::addObject(<a href="dbObj.htm">dbObj</a> *obj)
      </font></h4>

      <p>
        Adds an object <em>obj</em> to the group. If the object is already a member of 
        the group, it will not be added. The group's bounding box is adjusted accordingly.
      </p>

      <p>&nbsp;</p>

      <h4 class="shadowHeading1"><font face="Arial, Helvetica, sans-serif">
        grp.deleteObj(<a href="dbObj.htm">dbObj</a> *obj)
      </font></h4>

      <p>
        Removes an object <em>obj</em> from the group. The group's bounding box is adjusted accordingly.
      </p>

      <p>&nbsp;</p>

      <h4 class="shadowHeading1"><font face="Arial, Helvetica, sans-serif">
        int32_t group::size()
      </font></h4>

      <p>
        Returns the size (number of objects in the group).
      </p>

      <p>&nbsp;</p>

      <h4 class="shadowHeading1"><font face="Arial, Helvetica, sans-serif">
        std::vector&lt;<a href="dbObj.htm">dbObj</a> *&gt; &amp;group::members()
      </font></h4>

      <p>
        Returns a list of the group's members.
      </p>

      <p>&nbsp;</p>

      <h4 class="shadowHeading1"><font face="Arial, Helvetica, sans-serif">
        group::clear()
      </font></h4>

      <p>
        Removes all members of the group. The group is NOT deleted.
      </p>

      <p>&nbsp;</p>

      <h4 class="shadowHeading1"><font face="Arial, Helvetica, sans-serif">
        bool group::member(<a href="dbObj.htm">dbObj</a> *obj)
      </font></h4>

      <p>
        Returns true if <em>obj</em> is a member of the group.
      </p>

      <p>&nbsp;</p>

      <h4 class="shadowHeading1"><font face="Arial, Helvetica, sans-serif">
        bool group::ptInPoly(const <a href="Point.htm">Point</a> &amp;p)
      </font></h4>

      <p>
        Returns true if the point <em>p</em> is inside the group's bounding box.
      </p>

      <p>&nbsp;</p>

      <h4 class="shadowHeading1"><font face="Arial, Helvetica, sans-serif">
        group::Move(<a href="cellview.htm">cellView</a> *cv, <a href="Point.htm">Point</a> delta, bool opt=true)
      </font></h4>

      <p>
        Moves the group (of the cellView <em>cv</em>) and all its members by <em>delta</em>. If <em>opt</em> 
        is true, the spatial trees are reoptimised. If many groups are to be moved, it is faster to set 
        <em>opt</em> to false and make a single call to cv.optimise() after.
      </p>

      <p>&nbsp;</p>

      <h4 class="shadowHeading1"><font face="Arial, Helvetica, sans-serif">
        dbObj * group::Copy(<a href="cellview.htm">cellView</a> *cv, <a href="Point.htm">Point</a> delta)
      </font></h4>

      <p>
        Copies the group and all its members, displacing it by <em>delta</em> in the cellView <em>cv</em>.
      </p>

      <p>&nbsp;</p>

      <h4 class="shadowHeading1"><font face="Arial, Helvetica, sans-serif">
        group::transform(<a href="transform.htm">transform</a> &amp;trans)
      </font></h4>

      <p>
        Transforms the group and all its members by <em>trans</em>.
      </p>

      <p>&nbsp;</p>

      <h4 class="shadowHeading1"><font face="Arial, Helvetica, sans-serif">
        int16_t  group::layer()
      </font></h4>

      <p>
        Returns the group's layer id, TECH_FIGGROUP_LAYER.
      </p>

      <p>&nbsp;</p>
      <p>&nbsp;</p>

      <!-- #EndEditable --> 
      <p><a href="contents.htm"><font face="Arial, Helvetica, sans-serif">Contents</font></a><font face="Arial, Helvetica, sans-serif">|<a href="subject_index.htm">Index</a></font></p>
      <p><font face="Arial, Helvetica, sans-serif" size="-2">Copyright &copy; Peardrop Design 2024.</font></p>
    </div>
  </body>
<!-- #EndTemplate --></html>
