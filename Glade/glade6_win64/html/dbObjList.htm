<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><!-- #BeginTemplate "/Templates/glade.dwt" --><!-- DW6 -->
	<head>
		<!-- #BeginEditable "doctitle" --> 
		<title>Glade Reference Manual</title>
		<link href="CSS Docs/shadowHeading1.css" rel="stylesheet" type="text/css">
		<!-- #EndEditable -->
		<meta http-equiv="Content-Type"
		content="text/html; charset=iso-8859-1">
		<style type="text/css">
		body,td,th {
			font-family: Arial, Helvetica, sans-serif;
		}
		</style>
	</head>

	<body bgcolor="#FFFFFF">
		<div align="left"><img src="images/canvasview" width="32" height="32" align="right"><br>
		</div>
		<div align="left">
		<p align="left"><font face="Arial, Helvetica, sans-serif"><b>
			<font size="4">
				Glade Reference
			</font></b>
		</font></p>
		<hr>

		<!-- #BeginEditable "text" -->
		<h2><font face="Arial, Helvetica, sans-serif">
			dbObjList
		</font></h2>

		<p>
			A dbObjList is a list class containing dbObj objects. It is returned e.g by 
			cellView::dbGetOverlaps()
		</p>

		<p>&nbsp;</p>

		<h4 class="shadowHeading1"><font face="Arial, Helvetica, sans-serif">
			list.clear()
		</font></h4>

		<p>
			Clears a dbObjList
		</p>

		<p>&nbsp;</p>

		<h4 class="shadowHeading1"><font face="Arial, Helvetica, sans-serif">
			int32_t dbObjList::size()
		</font></h4>

		<p>
			Returns the number of objects in a dbObjList
		</p>

		<p>&nbsp;</p>

		<h4 class="shadowHeading1"><font face="Arial, Helvetica, sans-serif">
			bool dbObjList::isEmpty()
		</font></h4>

		<p>
			Returns true if the dbObjList is empty, i.e. the size is zero.
		</p>

		<p>&nbsp;</p>

		<h4 class="shadowHeading1"><font face="Arial, Helvetica, sans-serif">
			bool dbObjList::member(dbObj *obj)</strong>
		</font></h4>

		<p>
			Returns true if the object obj is a member of the list, else false.
		</p>

		<p>&nbsp;</p>

		<h4 class="shadowHeading1"><font face="Arial, Helvetica, sans-serif">
			dbObjList::prepend(dbObj *obj)
		</font></h4>

		<p>
			Inserts the object at the beginning of the list. No list traversal is required.
		</p>

		<p>&nbsp;</p>

		<h4 class="shadowHeading1"><font face="Arial, Helvetica, sans-serif">
			dbObjList::append(dbObj *obj)
		</font></h4>

		<p>
			Inserts the object at the end of the list. No list traversal is required.
		</p>

		<p>&nbsp;</p>

		<h4 class="shadowHeading1"><font face="Arial, Helvetica, sans-serif">
			dbObjList::concat(dbObjList *otherlist)
		</font></h4>

		<p>
			Concatenate the two lists. <em>otherlist </em>is appended to the list, note 
			this is a soft copy and <em>otherlist </em>remains unchanged.
		</p>

		<p>&nbsp;</p>

		<h4 class="shadowHeading1"><font face="Arial, Helvetica, sans-serif">
			int32_t dbObjList::remove(<a href="dbObj.htm">dbObj </a>*obj)
		</font></h4>

		<p>
			Removes the object from the list. The list size is decremented. Returns 1 if 
			the dbObj was found in the list, 0 if not. Beware: horrible things will 
			happen if you remove a list item while using an iterator for that list.
		</p>

		<p>&nbsp;</p>

		<h4 class="shadowHeading1"><font face="Arial, Helvetica, sans-serif">
			<a href="dbObj.htm">dbObj </a>*dbObjList::pop()
		</font></h4>

		<p>
			Pops an object from the front of the list; the size of the list is decremented by one.
		</p>

		<p>&nbsp;</p>

		<h4 class="shadowHeading1"><font face="Arial, Helvetica, sans-serif">
			<a href="dbObj.htm" pbzloc="1438">dbObj</a> * dbObjList::first()
		</font></h4>

		<p>
			Returns the first object in the list.
		</p>

		<p>&nbsp;</p>

		<h4 class="shadowHeading1"><font face="Arial, Helvetica, sans-serif">
			<a href="dbObj.htm">dbObj</a> * dbObjList::next()
		</font></h4>

		<p>
			Returns the next object in the list, or null if the end of the list is reached. The iterator is incremented.
		</p>

		<p>&nbsp;</p>

		<h4 class="shadowHeading1"><font face="Arial, Helvetica, sans-serif">
			<a href="dbObj.htm">dbObj </a> * dbObjList::peek()
		</font></h4>

		<p>
			Returns the next object in the list, or null if the end of the list is reached. The iterator is NOT incremented.
		</p>

		<p>&nbsp;</p>

		<h4 class="shadowHeading1"><font face="Arial, Helvetica, sans-serif">
			<a href="dbObj.htm">dbObj</a> * dbObjList::last()
		</font></h4>

		<p>
			Returns the last object in the list, or null if the list is empty.
		</p>

		<p>&nbsp;</p>

		<h2>
			Casting to other types
		</h2>


		<p>
			Because many operations e.g. dbGetOverlaps() as mentioned above return a dbObjList 
			with object as the base class, dbObj, there are swig wrapped C functions to cast 
			to the derived type (you cannot cast in python).
		</p>

		<p>
			See the <a href="dbObj.htm">dbObj</a> class for a list of all cast functions.
		</p>

		<p>&nbsp;</p>

		<h2>
			Iterator
		</h2>

		<p>
			An iterator to allow traversing the objects in the dbObjList using Python.
		</p>

		<p>&nbsp;</p>

		<h4 class="shadowHeading1"><font face="Arial, Helvetica, sans-serif">
			iter = objIterator(dbObjList *list)
		</font></h4>

		<p>
			Initialises the <a href="dbObj.htm">dbObj</a> iterator for the dbObjList. For example:
		</p>

		<blockquote>
			<pre> 
				# Find shapes on a layer in a given area and print their type
				#
				objs = cv.dbGetOverlaps(box, layer)
				iter = dbObjIterator(objs)
				while not iter.end() :
					obj = iter.value()
					type = obj.objType()
					print &quot;object type = &quot;, type
					iter.next()
				#
			</pre>
		</blockquote>
		
		<p>&nbsp;</p>

		<h4 class="shadowHeading1"><font face="Arial, Helvetica, sans-serif">
			<a href="dbObj.htm">dbObj</a> * iter.value()
		</font></h4>

		<p>
			Returns the current object.
		</p>

		<p>&nbsp;</p>

		<h4 class="shadowHeading1"><font face="Arial, Helvetica, sans-serif">
			iter.next()
		</font></h4>

		<p>
			Advances the iterator to the next dbObj.
		</p>

		<p>&nbsp;</p>

		<h4 class="shadowHeading1"><font face="Arial, Helvetica, sans-serif">
			bool iter.end()
		</font></h4>

		<p>
			Returns false if there are more objects, else returns true if there are no more.
		</p>

		<p>&nbsp;</p>
		<p>&nbsp;</p>

		<!-- #EndEditable --> 
		<p><a href="contents.htm"><font face="Arial, Helvetica, sans-serif">Contents</font></a><font face="Arial, Helvetica, sans-serif">|<a href="subject_index.htm">Index</a></font></p>
		<p><font face="Arial, Helvetica, sans-serif" size="-2">Copyright &copy; Peardrop Design 2024.</font></p>
		</div>
	</body>
<!-- #EndTemplate --></html>
