<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><!-- #BeginTemplate "/Templates/glade.dwt" --><!-- DW6 -->
  <head>
    <!-- #BeginEditable "doctitle" --> 
    <title>Glade Reference Manual</title>
    <!-- #EndEditable -->
    <meta http-equiv="Content-Type"
    content="text/html; charset=iso-8859-1">
    <style type="text/css">
    body,td,th {
      font-family: Arial, Helvetica, sans-serif;
    }
    </style>
  </head>
  <body bgcolor="#FFFFFF">
    <div align="left"><img src="images/canvasview" width="32" height="32" align="right"><br>
    </div>
    <div align="left">
      <p align="left"><font face="Arial, Helvetica, sans-serif">
        <b><font size="4">
          Glade Reference
        </font></b>
      </font></p>
      <hr>

      <!-- #BeginEditable "text" --> 
      <h2><font face="Arial, Helvetica, sans-serif">
        viaInst class
      </font></h2>

      <p>
        A viaInst is a reference to a <a href="via.htm">via</a>, 
        in a <a href="cellview.htm">cellview</a>. viaInsts are like instances but 
        require less memory and have a specific function, i.e. to be instances of 
        <a href="via.htm">via</a>s which again are a type of 
        <a href="cellview.htm">cellView</a> with a specific function, i.e to hold 
        rectangular shapes of the via. Normally viaInsts are created in a 
        <a href="cellview.htm">cellView</a>                 
        using the dbCreateViaInst() function.
      </p>

      <p>&nbsp;</p>

      <h4 class="shadowHeading1"><font face="Arial, Helvetica, sans-serif">
        int32_t viaInst::left()
      </font></h4>

      <p>
        Get the left edge of the viaInst's bounding box
      </p>

      <p>&nbsp;</p>

      <h4 class="shadowHeading1"><font face="Arial, Helvetica, sans-serif">
        int32_t viaInst::bottom()
      </font></h4>

      <p>
        Get the bottom edge of the viaInst's bounding box.
      </p>

      <p>&nbsp;</p>

      <h4 class="shadowHeading1"><font face="Arial, Helvetica, sans-serif">
        int32_t  viaInst::right()
      </font></h4>

      <p>
        Get the right edge of the viaInst's bounding box.
      </p>

      <p>&nbsp;</p>

      <h4 class="shadowHeading1"><font face="Arial, Helvetica, sans-serif">
        int32_t  viaInst::top()
      </font></h4>

      <p>
        Get the top edge of the viaInst's bounding box.
      </p>

      <p>&nbsp;</p>

      <h4 class="shadowHeading1"><font face="Arial, Helvetica, sans-serif">
        viaInst::offGrid(int32_t grid)
      </font></h4>

      <p>
        Checks if a viaInst's origin is on the grid <em>grid,</em> which is in database units.
      </p>

      <p>&nbsp;</p>

      <h4 class="shadowHeading1"><font face="Arial, Helvetica, sans-serif">
          viaInst::orient(db_Orient  o)
      </font></h4>

      <p>
        Set the viaInst's orientation. db_Orient can be one of: R0, R90, R180, R270, MX, MXR90, MY, MYR90.
      </p>

      <p>&nbsp;</p>

      <h4 class="shadowHeading1"><font face="Arial, Helvetica, sans-serif">
        db_Orient viaInst::orient()
      </font></h4>

      <p>
        Get the viaInst's orientation.
      </p>

      <p>&nbsp;</p>

      <h4 class="shadowHeading1"><font face="Arial, Helvetica, sans-serif">
        viaInst::origin(<a href="Point.htm">Point</a> origin)
      </font></h4>

      <p>
        Sets the viaInst's origin to the <a href="Point.htm">Point</a> <em>origin</em>.
      </p>

      <p>&nbsp;</p>

      <h4 class="shadowHeading1"><font face="Arial, Helvetica, sans-serif">
        <a href="Point.htm">Point</a> viaInst::origin()
      </font></h4>

      <p>
          Get the viaInst's origin.
      </p>

      <p>&nbsp;</p>

      <h4 class="shadowHeading1"><font face="Arial, Helvetica, sans-serif">
        <a href="Rect.htm">Rect</a> viaInst::bBox()
      </font></h4>

      <p>
        Get the viaInst's bounding box.
      </p>

      <p>&nbsp;</p>    
                            
      <h4 class="shadowHeading1"><font face="Arial, Helvetica, sans-serif">
        db_Type viaInst::objType()
      </font></h4>

      <p>
        Returns the objects type as VIAINST
      </p>

      <p>&nbsp;</p> 

      <h4 class="shadowHeading1"><font face="Arial, Helvetica, sans-serif">
        char * vi.objName()
      </font></h4>

      <p>
        Returns the print name i.e. "VIAINST"
      </p>

      <p>&nbsp;</p>

      <h4 class="shadowHeading1"><font face="Arial, Helvetica, sans-serif">
        vi.transform(<a href="transform.htm">transform</a> trans)
      </font></h4>

      <p>
        Transform the instance by the given transform <em>trans</em>.
      </p>

      <p>&nbsp;</p>

      <h4 class="shadowHeading1"><font face="Arial, Helvetica, sans-serif">
        viaInst::scale(float64_t scalefactor, float64_t  grid)
      </font></h4>

      <p>
        Scale the instance origin coordinates by scalefactor, snapping to grid.
      </p>

      <p>&nbsp;</p>

      <h4 class="shadowHeading1"><font face="Arial, Helvetica, sans-serif">
        viaInst::Move(cellView *cv, <a href="Point.htm">Point</a> delta, bool opt=true)
      </font></h4>

      <p>
        Move the viaInst's origin by delta.&nbsp; If opt is 1 then 
        the database is re-optimised for the new inst position. If there are a lot of 
        objects to move it makes sense to turn this off and instead use the cellView 
        update() function after moving them all.
      </p>

      <p>&nbsp;</p>

      <h4 class="shadowHeading1"><font face="Arial, Helvetica, sans-serif">
        <a href="dbObj.htm">dbObj</a> * viaInst::Copy(<a href="cellview.htm">cellView</a> *cv, <a href="Point.htm">Point</a> delta)
      </font></h4>

      <p>
        Copy the viaInst. <em>cv</em> is the destination cellview, 
        <em>delta</em> is the offset from the current origin.
      </p>

      <p>&nbsp;</p>

      <h4 class="shadowHeading1"><font face="Arial, Helvetica, sans-serif">
        <a href="dbObj.htm">dbObj</a> * viaInst::Flatten(<a href="cellview.htm">cellView</a> *cv, 
        <a href="transform.htm">transform</a> trans)
      </font></h4>
        
      <p>
        Flatten the viaInst's into the cellView <em>cv</em>, with 
        the given transform <em>trans</em>.
      </p>

      <p>&nbsp;</p>

      <h4 class="shadowHeading1"><font face="Arial, Helvetica, sans-serif">
          <a href="via.htm">via</a> * viaInst::getVia()
      </font></h4>

      <p>
        Gets the via master for this viaInst
      </p>

      <p>&nbsp;</p>
      <p>&nbsp;</p>

      <!-- #EndEditable --> 
      <p><a href="contents.htm"><font face="Arial, Helvetica, sans-serif">Contents</font></a><font face="Arial, Helvetica, sans-serif">|<a href="subject_index.htm">Index</a></font></p>
      <p><font face="Arial, Helvetica, sans-serif" size="-2">Copyright &copy; Peardrop Design 2024.</font></p>
    </div>
  </body>
<!-- #EndTemplate --></html>
